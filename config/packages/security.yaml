security:
    encoders:
        App\Entity\User:
            algorithm: argon2i

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        api:
            pattern: ^/api
            stateless: true
            anonymous: true

            json_login:
                # Here authentication will happen (token generation)
                check_path: /api/login_check
                # Handle successfull authentication
                success_handler: lexik_jwt_authentication.handler.authentication_success
                # Handle authentication failure (invalid credentials, no credentials etc).
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
            guard:
                authenticators:
                    #                    - lexik_jwt_authentication.jwt_token_authenticator
                    - App\Security\TokenAuthenticator

        main:
            anonymous: true
            guard:
                authenticators:
                    - App\Security\AppMainAuthenticator

            logout:
                # The route name the user can go to in order to logout
                path: app_logout
                # The name of the route to redirect to after logging out
                target: app_login

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        #        - { path: ^/api/login_check$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/, roles: ROLE_USER }
        - { path: ^/admin, roles: ROLE_ADMIN }

    role_hierarchy:
        ROLE_ADMIN: ROLE_USER
